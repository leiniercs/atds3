// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: todus.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_todus_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_todus_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_todus_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_todus_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_todus_2eproto;
namespace toDusPB {
class RecepcionFichaAcceso;
class RecepcionFichaAccesoDefaultTypeInternal;
extern RecepcionFichaAccesoDefaultTypeInternal _RecepcionFichaAcceso_default_instance_;
class RecepcionFichaSolicitud;
class RecepcionFichaSolicitudDefaultTypeInternal;
extern RecepcionFichaSolicitudDefaultTypeInternal _RecepcionFichaSolicitud_default_instance_;
class RecepcionFichaSolicitud_DatosUsuario;
class RecepcionFichaSolicitud_DatosUsuarioDefaultTypeInternal;
extern RecepcionFichaSolicitud_DatosUsuarioDefaultTypeInternal _RecepcionFichaSolicitud_DatosUsuario_default_instance_;
class SolicitudFichaAcceso;
class SolicitudFichaAccesoDefaultTypeInternal;
extern SolicitudFichaAccesoDefaultTypeInternal _SolicitudFichaAcceso_default_instance_;
class SolicitudFichaSolicitud;
class SolicitudFichaSolicitudDefaultTypeInternal;
extern SolicitudFichaSolicitudDefaultTypeInternal _SolicitudFichaSolicitud_default_instance_;
class SolicitudSMS;
class SolicitudSMSDefaultTypeInternal;
extern SolicitudSMSDefaultTypeInternal _SolicitudSMS_default_instance_;
}  // namespace toDusPB
PROTOBUF_NAMESPACE_OPEN
template<> ::toDusPB::RecepcionFichaAcceso* Arena::CreateMaybeMessage<::toDusPB::RecepcionFichaAcceso>(Arena*);
template<> ::toDusPB::RecepcionFichaSolicitud* Arena::CreateMaybeMessage<::toDusPB::RecepcionFichaSolicitud>(Arena*);
template<> ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* Arena::CreateMaybeMessage<::toDusPB::RecepcionFichaSolicitud_DatosUsuario>(Arena*);
template<> ::toDusPB::SolicitudFichaAcceso* Arena::CreateMaybeMessage<::toDusPB::SolicitudFichaAcceso>(Arena*);
template<> ::toDusPB::SolicitudFichaSolicitud* Arena::CreateMaybeMessage<::toDusPB::SolicitudFichaSolicitud>(Arena*);
template<> ::toDusPB::SolicitudSMS* Arena::CreateMaybeMessage<::toDusPB::SolicitudSMS>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace toDusPB {

// ===================================================================

class SolicitudSMS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:toDusPB.SolicitudSMS) */ {
 public:
  inline SolicitudSMS() : SolicitudSMS(nullptr) {}
  virtual ~SolicitudSMS();

  SolicitudSMS(const SolicitudSMS& from);
  SolicitudSMS(SolicitudSMS&& from) noexcept
    : SolicitudSMS() {
    *this = ::std::move(from);
  }

  inline SolicitudSMS& operator=(const SolicitudSMS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolicitudSMS& operator=(SolicitudSMS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SolicitudSMS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SolicitudSMS* internal_default_instance() {
    return reinterpret_cast<const SolicitudSMS*>(
               &_SolicitudSMS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SolicitudSMS& a, SolicitudSMS& b) {
    a.Swap(&b);
  }
  inline void Swap(SolicitudSMS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SolicitudSMS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SolicitudSMS* New() const final {
    return CreateMaybeMessage<SolicitudSMS>(nullptr);
  }

  SolicitudSMS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SolicitudSMS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SolicitudSMS& from);
  void MergeFrom(const SolicitudSMS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SolicitudSMS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "toDusPB.SolicitudSMS";
  }
  protected:
  explicit SolicitudSMS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_todus_2eproto);
    return ::descriptor_table_todus_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTelefonoFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // required string telefono = 1;
  bool has_telefono() const;
  private:
  bool _internal_has_telefono() const;
  public:
  void clear_telefono();
  const std::string& telefono() const;
  void set_telefono(const std::string& value);
  void set_telefono(std::string&& value);
  void set_telefono(const char* value);
  void set_telefono(const char* value, size_t size);
  std::string* mutable_telefono();
  std::string* release_telefono();
  void set_allocated_telefono(std::string* telefono);
  private:
  const std::string& _internal_telefono() const;
  void _internal_set_telefono(const std::string& value);
  std::string* _internal_mutable_telefono();
  public:

  // required string id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:toDusPB.SolicitudSMS)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr telefono_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  friend struct ::TableStruct_todus_2eproto;
};
// -------------------------------------------------------------------

class SolicitudFichaSolicitud PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:toDusPB.SolicitudFichaSolicitud) */ {
 public:
  inline SolicitudFichaSolicitud() : SolicitudFichaSolicitud(nullptr) {}
  virtual ~SolicitudFichaSolicitud();

  SolicitudFichaSolicitud(const SolicitudFichaSolicitud& from);
  SolicitudFichaSolicitud(SolicitudFichaSolicitud&& from) noexcept
    : SolicitudFichaSolicitud() {
    *this = ::std::move(from);
  }

  inline SolicitudFichaSolicitud& operator=(const SolicitudFichaSolicitud& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolicitudFichaSolicitud& operator=(SolicitudFichaSolicitud&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SolicitudFichaSolicitud& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SolicitudFichaSolicitud* internal_default_instance() {
    return reinterpret_cast<const SolicitudFichaSolicitud*>(
               &_SolicitudFichaSolicitud_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SolicitudFichaSolicitud& a, SolicitudFichaSolicitud& b) {
    a.Swap(&b);
  }
  inline void Swap(SolicitudFichaSolicitud* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SolicitudFichaSolicitud* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SolicitudFichaSolicitud* New() const final {
    return CreateMaybeMessage<SolicitudFichaSolicitud>(nullptr);
  }

  SolicitudFichaSolicitud* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SolicitudFichaSolicitud>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SolicitudFichaSolicitud& from);
  void MergeFrom(const SolicitudFichaSolicitud& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SolicitudFichaSolicitud* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "toDusPB.SolicitudFichaSolicitud";
  }
  protected:
  explicit SolicitudFichaSolicitud(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_todus_2eproto);
    return ::descriptor_table_todus_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTelefonoFieldNumber = 1,
    kIdFieldNumber = 2,
    kCodigoFieldNumber = 3,
  };
  // required string telefono = 1;
  bool has_telefono() const;
  private:
  bool _internal_has_telefono() const;
  public:
  void clear_telefono();
  const std::string& telefono() const;
  void set_telefono(const std::string& value);
  void set_telefono(std::string&& value);
  void set_telefono(const char* value);
  void set_telefono(const char* value, size_t size);
  std::string* mutable_telefono();
  std::string* release_telefono();
  void set_allocated_telefono(std::string* telefono);
  private:
  const std::string& _internal_telefono() const;
  void _internal_set_telefono(const std::string& value);
  std::string* _internal_mutable_telefono();
  public:

  // required string id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // required string codigo = 3;
  bool has_codigo() const;
  private:
  bool _internal_has_codigo() const;
  public:
  void clear_codigo();
  const std::string& codigo() const;
  void set_codigo(const std::string& value);
  void set_codigo(std::string&& value);
  void set_codigo(const char* value);
  void set_codigo(const char* value, size_t size);
  std::string* mutable_codigo();
  std::string* release_codigo();
  void set_allocated_codigo(std::string* codigo);
  private:
  const std::string& _internal_codigo() const;
  void _internal_set_codigo(const std::string& value);
  std::string* _internal_mutable_codigo();
  public:

  // @@protoc_insertion_point(class_scope:toDusPB.SolicitudFichaSolicitud)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr telefono_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr codigo_;
  friend struct ::TableStruct_todus_2eproto;
};
// -------------------------------------------------------------------

class RecepcionFichaSolicitud_DatosUsuario PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:toDusPB.RecepcionFichaSolicitud.DatosUsuario) */ {
 public:
  inline RecepcionFichaSolicitud_DatosUsuario() : RecepcionFichaSolicitud_DatosUsuario(nullptr) {}
  virtual ~RecepcionFichaSolicitud_DatosUsuario();

  RecepcionFichaSolicitud_DatosUsuario(const RecepcionFichaSolicitud_DatosUsuario& from);
  RecepcionFichaSolicitud_DatosUsuario(RecepcionFichaSolicitud_DatosUsuario&& from) noexcept
    : RecepcionFichaSolicitud_DatosUsuario() {
    *this = ::std::move(from);
  }

  inline RecepcionFichaSolicitud_DatosUsuario& operator=(const RecepcionFichaSolicitud_DatosUsuario& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecepcionFichaSolicitud_DatosUsuario& operator=(RecepcionFichaSolicitud_DatosUsuario&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RecepcionFichaSolicitud_DatosUsuario& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecepcionFichaSolicitud_DatosUsuario* internal_default_instance() {
    return reinterpret_cast<const RecepcionFichaSolicitud_DatosUsuario*>(
               &_RecepcionFichaSolicitud_DatosUsuario_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RecepcionFichaSolicitud_DatosUsuario& a, RecepcionFichaSolicitud_DatosUsuario& b) {
    a.Swap(&b);
  }
  inline void Swap(RecepcionFichaSolicitud_DatosUsuario* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecepcionFichaSolicitud_DatosUsuario* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RecepcionFichaSolicitud_DatosUsuario* New() const final {
    return CreateMaybeMessage<RecepcionFichaSolicitud_DatosUsuario>(nullptr);
  }

  RecepcionFichaSolicitud_DatosUsuario* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RecepcionFichaSolicitud_DatosUsuario>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RecepcionFichaSolicitud_DatosUsuario& from);
  void MergeFrom(const RecepcionFichaSolicitud_DatosUsuario& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecepcionFichaSolicitud_DatosUsuario* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "toDusPB.RecepcionFichaSolicitud.DatosUsuario";
  }
  protected:
  explicit RecepcionFichaSolicitud_DatosUsuario(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_todus_2eproto);
    return ::descriptor_table_todus_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTelefonoFieldNumber = 1,
    kNombreFieldNumber = 2,
    kEnlaceFotoFieldNumber = 3,
    kReservado1FieldNumber = 4,
    kReservado2FieldNumber = 5,
  };
  // required string telefono = 1;
  bool has_telefono() const;
  private:
  bool _internal_has_telefono() const;
  public:
  void clear_telefono();
  const std::string& telefono() const;
  void set_telefono(const std::string& value);
  void set_telefono(std::string&& value);
  void set_telefono(const char* value);
  void set_telefono(const char* value, size_t size);
  std::string* mutable_telefono();
  std::string* release_telefono();
  void set_allocated_telefono(std::string* telefono);
  private:
  const std::string& _internal_telefono() const;
  void _internal_set_telefono(const std::string& value);
  std::string* _internal_mutable_telefono();
  public:

  // optional string nombre = 2;
  bool has_nombre() const;
  private:
  bool _internal_has_nombre() const;
  public:
  void clear_nombre();
  const std::string& nombre() const;
  void set_nombre(const std::string& value);
  void set_nombre(std::string&& value);
  void set_nombre(const char* value);
  void set_nombre(const char* value, size_t size);
  std::string* mutable_nombre();
  std::string* release_nombre();
  void set_allocated_nombre(std::string* nombre);
  private:
  const std::string& _internal_nombre() const;
  void _internal_set_nombre(const std::string& value);
  std::string* _internal_mutable_nombre();
  public:

  // optional string enlaceFoto = 3;
  bool has_enlacefoto() const;
  private:
  bool _internal_has_enlacefoto() const;
  public:
  void clear_enlacefoto();
  const std::string& enlacefoto() const;
  void set_enlacefoto(const std::string& value);
  void set_enlacefoto(std::string&& value);
  void set_enlacefoto(const char* value);
  void set_enlacefoto(const char* value, size_t size);
  std::string* mutable_enlacefoto();
  std::string* release_enlacefoto();
  void set_allocated_enlacefoto(std::string* enlacefoto);
  private:
  const std::string& _internal_enlacefoto() const;
  void _internal_set_enlacefoto(const std::string& value);
  std::string* _internal_mutable_enlacefoto();
  public:

  // optional string reservado1 = 4;
  bool has_reservado1() const;
  private:
  bool _internal_has_reservado1() const;
  public:
  void clear_reservado1();
  const std::string& reservado1() const;
  void set_reservado1(const std::string& value);
  void set_reservado1(std::string&& value);
  void set_reservado1(const char* value);
  void set_reservado1(const char* value, size_t size);
  std::string* mutable_reservado1();
  std::string* release_reservado1();
  void set_allocated_reservado1(std::string* reservado1);
  private:
  const std::string& _internal_reservado1() const;
  void _internal_set_reservado1(const std::string& value);
  std::string* _internal_mutable_reservado1();
  public:

  // optional string reservado2 = 5;
  bool has_reservado2() const;
  private:
  bool _internal_has_reservado2() const;
  public:
  void clear_reservado2();
  const std::string& reservado2() const;
  void set_reservado2(const std::string& value);
  void set_reservado2(std::string&& value);
  void set_reservado2(const char* value);
  void set_reservado2(const char* value, size_t size);
  std::string* mutable_reservado2();
  std::string* release_reservado2();
  void set_allocated_reservado2(std::string* reservado2);
  private:
  const std::string& _internal_reservado2() const;
  void _internal_set_reservado2(const std::string& value);
  std::string* _internal_mutable_reservado2();
  public:

  // @@protoc_insertion_point(class_scope:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr telefono_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nombre_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr enlacefoto_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reservado1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reservado2_;
  friend struct ::TableStruct_todus_2eproto;
};
// -------------------------------------------------------------------

class RecepcionFichaSolicitud PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:toDusPB.RecepcionFichaSolicitud) */ {
 public:
  inline RecepcionFichaSolicitud() : RecepcionFichaSolicitud(nullptr) {}
  virtual ~RecepcionFichaSolicitud();

  RecepcionFichaSolicitud(const RecepcionFichaSolicitud& from);
  RecepcionFichaSolicitud(RecepcionFichaSolicitud&& from) noexcept
    : RecepcionFichaSolicitud() {
    *this = ::std::move(from);
  }

  inline RecepcionFichaSolicitud& operator=(const RecepcionFichaSolicitud& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecepcionFichaSolicitud& operator=(RecepcionFichaSolicitud&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RecepcionFichaSolicitud& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecepcionFichaSolicitud* internal_default_instance() {
    return reinterpret_cast<const RecepcionFichaSolicitud*>(
               &_RecepcionFichaSolicitud_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RecepcionFichaSolicitud& a, RecepcionFichaSolicitud& b) {
    a.Swap(&b);
  }
  inline void Swap(RecepcionFichaSolicitud* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecepcionFichaSolicitud* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RecepcionFichaSolicitud* New() const final {
    return CreateMaybeMessage<RecepcionFichaSolicitud>(nullptr);
  }

  RecepcionFichaSolicitud* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RecepcionFichaSolicitud>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RecepcionFichaSolicitud& from);
  void MergeFrom(const RecepcionFichaSolicitud& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecepcionFichaSolicitud* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "toDusPB.RecepcionFichaSolicitud";
  }
  protected:
  explicit RecepcionFichaSolicitud(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_todus_2eproto);
    return ::descriptor_table_todus_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef RecepcionFichaSolicitud_DatosUsuario DatosUsuario;

  // accessors -------------------------------------------------------

  enum : int {
    kFichaSolicitudFieldNumber = 1,
    kUsuarioFieldNumber = 2,
  };
  // required string fichaSolicitud = 1;
  bool has_fichasolicitud() const;
  private:
  bool _internal_has_fichasolicitud() const;
  public:
  void clear_fichasolicitud();
  const std::string& fichasolicitud() const;
  void set_fichasolicitud(const std::string& value);
  void set_fichasolicitud(std::string&& value);
  void set_fichasolicitud(const char* value);
  void set_fichasolicitud(const char* value, size_t size);
  std::string* mutable_fichasolicitud();
  std::string* release_fichasolicitud();
  void set_allocated_fichasolicitud(std::string* fichasolicitud);
  private:
  const std::string& _internal_fichasolicitud() const;
  void _internal_set_fichasolicitud(const std::string& value);
  std::string* _internal_mutable_fichasolicitud();
  public:

  // required .toDusPB.RecepcionFichaSolicitud.DatosUsuario usuario = 2;
  bool has_usuario() const;
  private:
  bool _internal_has_usuario() const;
  public:
  void clear_usuario();
  const ::toDusPB::RecepcionFichaSolicitud_DatosUsuario& usuario() const;
  ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* release_usuario();
  ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* mutable_usuario();
  void set_allocated_usuario(::toDusPB::RecepcionFichaSolicitud_DatosUsuario* usuario);
  private:
  const ::toDusPB::RecepcionFichaSolicitud_DatosUsuario& _internal_usuario() const;
  ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* _internal_mutable_usuario();
  public:
  void unsafe_arena_set_allocated_usuario(
      ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* usuario);
  ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* unsafe_arena_release_usuario();

  // @@protoc_insertion_point(class_scope:toDusPB.RecepcionFichaSolicitud)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fichasolicitud_;
  ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* usuario_;
  friend struct ::TableStruct_todus_2eproto;
};
// -------------------------------------------------------------------

class SolicitudFichaAcceso PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:toDusPB.SolicitudFichaAcceso) */ {
 public:
  inline SolicitudFichaAcceso() : SolicitudFichaAcceso(nullptr) {}
  virtual ~SolicitudFichaAcceso();

  SolicitudFichaAcceso(const SolicitudFichaAcceso& from);
  SolicitudFichaAcceso(SolicitudFichaAcceso&& from) noexcept
    : SolicitudFichaAcceso() {
    *this = ::std::move(from);
  }

  inline SolicitudFichaAcceso& operator=(const SolicitudFichaAcceso& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolicitudFichaAcceso& operator=(SolicitudFichaAcceso&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SolicitudFichaAcceso& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SolicitudFichaAcceso* internal_default_instance() {
    return reinterpret_cast<const SolicitudFichaAcceso*>(
               &_SolicitudFichaAcceso_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SolicitudFichaAcceso& a, SolicitudFichaAcceso& b) {
    a.Swap(&b);
  }
  inline void Swap(SolicitudFichaAcceso* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SolicitudFichaAcceso* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SolicitudFichaAcceso* New() const final {
    return CreateMaybeMessage<SolicitudFichaAcceso>(nullptr);
  }

  SolicitudFichaAcceso* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SolicitudFichaAcceso>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SolicitudFichaAcceso& from);
  void MergeFrom(const SolicitudFichaAcceso& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SolicitudFichaAcceso* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "toDusPB.SolicitudFichaAcceso";
  }
  protected:
  explicit SolicitudFichaAcceso(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_todus_2eproto);
    return ::descriptor_table_todus_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTelefonoFieldNumber = 1,
    kFichaSolicitudFieldNumber = 2,
    kNumeroVersionFieldNumber = 3,
  };
  // required string telefono = 1;
  bool has_telefono() const;
  private:
  bool _internal_has_telefono() const;
  public:
  void clear_telefono();
  const std::string& telefono() const;
  void set_telefono(const std::string& value);
  void set_telefono(std::string&& value);
  void set_telefono(const char* value);
  void set_telefono(const char* value, size_t size);
  std::string* mutable_telefono();
  std::string* release_telefono();
  void set_allocated_telefono(std::string* telefono);
  private:
  const std::string& _internal_telefono() const;
  void _internal_set_telefono(const std::string& value);
  std::string* _internal_mutable_telefono();
  public:

  // required string fichaSolicitud = 2;
  bool has_fichasolicitud() const;
  private:
  bool _internal_has_fichasolicitud() const;
  public:
  void clear_fichasolicitud();
  const std::string& fichasolicitud() const;
  void set_fichasolicitud(const std::string& value);
  void set_fichasolicitud(std::string&& value);
  void set_fichasolicitud(const char* value);
  void set_fichasolicitud(const char* value, size_t size);
  std::string* mutable_fichasolicitud();
  std::string* release_fichasolicitud();
  void set_allocated_fichasolicitud(std::string* fichasolicitud);
  private:
  const std::string& _internal_fichasolicitud() const;
  void _internal_set_fichasolicitud(const std::string& value);
  std::string* _internal_mutable_fichasolicitud();
  public:

  // required string numeroVersion = 3;
  bool has_numeroversion() const;
  private:
  bool _internal_has_numeroversion() const;
  public:
  void clear_numeroversion();
  const std::string& numeroversion() const;
  void set_numeroversion(const std::string& value);
  void set_numeroversion(std::string&& value);
  void set_numeroversion(const char* value);
  void set_numeroversion(const char* value, size_t size);
  std::string* mutable_numeroversion();
  std::string* release_numeroversion();
  void set_allocated_numeroversion(std::string* numeroversion);
  private:
  const std::string& _internal_numeroversion() const;
  void _internal_set_numeroversion(const std::string& value);
  std::string* _internal_mutable_numeroversion();
  public:

  // @@protoc_insertion_point(class_scope:toDusPB.SolicitudFichaAcceso)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr telefono_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fichasolicitud_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr numeroversion_;
  friend struct ::TableStruct_todus_2eproto;
};
// -------------------------------------------------------------------

class RecepcionFichaAcceso PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:toDusPB.RecepcionFichaAcceso) */ {
 public:
  inline RecepcionFichaAcceso() : RecepcionFichaAcceso(nullptr) {}
  virtual ~RecepcionFichaAcceso();

  RecepcionFichaAcceso(const RecepcionFichaAcceso& from);
  RecepcionFichaAcceso(RecepcionFichaAcceso&& from) noexcept
    : RecepcionFichaAcceso() {
    *this = ::std::move(from);
  }

  inline RecepcionFichaAcceso& operator=(const RecepcionFichaAcceso& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecepcionFichaAcceso& operator=(RecepcionFichaAcceso&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RecepcionFichaAcceso& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecepcionFichaAcceso* internal_default_instance() {
    return reinterpret_cast<const RecepcionFichaAcceso*>(
               &_RecepcionFichaAcceso_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RecepcionFichaAcceso& a, RecepcionFichaAcceso& b) {
    a.Swap(&b);
  }
  inline void Swap(RecepcionFichaAcceso* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecepcionFichaAcceso* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RecepcionFichaAcceso* New() const final {
    return CreateMaybeMessage<RecepcionFichaAcceso>(nullptr);
  }

  RecepcionFichaAcceso* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RecepcionFichaAcceso>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RecepcionFichaAcceso& from);
  void MergeFrom(const RecepcionFichaAcceso& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecepcionFichaAcceso* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "toDusPB.RecepcionFichaAcceso";
  }
  protected:
  explicit RecepcionFichaAcceso(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_todus_2eproto);
    return ::descriptor_table_todus_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFichaAccesoFieldNumber = 2,
    kReservado1FieldNumber = 1,
    kTiempoExpiracionFieldNumber = 3,
  };
  // required string fichaAcceso = 2;
  bool has_fichaacceso() const;
  private:
  bool _internal_has_fichaacceso() const;
  public:
  void clear_fichaacceso();
  const std::string& fichaacceso() const;
  void set_fichaacceso(const std::string& value);
  void set_fichaacceso(std::string&& value);
  void set_fichaacceso(const char* value);
  void set_fichaacceso(const char* value, size_t size);
  std::string* mutable_fichaacceso();
  std::string* release_fichaacceso();
  void set_allocated_fichaacceso(std::string* fichaacceso);
  private:
  const std::string& _internal_fichaacceso() const;
  void _internal_set_fichaacceso(const std::string& value);
  std::string* _internal_mutable_fichaacceso();
  public:

  // required int32 reservado1 = 1;
  bool has_reservado1() const;
  private:
  bool _internal_has_reservado1() const;
  public:
  void clear_reservado1();
  ::PROTOBUF_NAMESPACE_ID::int32 reservado1() const;
  void set_reservado1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reservado1() const;
  void _internal_set_reservado1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 tiempoExpiracion = 3;
  bool has_tiempoexpiracion() const;
  private:
  bool _internal_has_tiempoexpiracion() const;
  public:
  void clear_tiempoexpiracion();
  ::PROTOBUF_NAMESPACE_ID::int32 tiempoexpiracion() const;
  void set_tiempoexpiracion(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tiempoexpiracion() const;
  void _internal_set_tiempoexpiracion(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:toDusPB.RecepcionFichaAcceso)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fichaacceso_;
  ::PROTOBUF_NAMESPACE_ID::int32 reservado1_;
  ::PROTOBUF_NAMESPACE_ID::int32 tiempoexpiracion_;
  friend struct ::TableStruct_todus_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SolicitudSMS

// required string telefono = 1;
inline bool SolicitudSMS::_internal_has_telefono() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SolicitudSMS::has_telefono() const {
  return _internal_has_telefono();
}
inline void SolicitudSMS::clear_telefono() {
  telefono_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SolicitudSMS::telefono() const {
  // @@protoc_insertion_point(field_get:toDusPB.SolicitudSMS.telefono)
  return _internal_telefono();
}
inline void SolicitudSMS::set_telefono(const std::string& value) {
  _internal_set_telefono(value);
  // @@protoc_insertion_point(field_set:toDusPB.SolicitudSMS.telefono)
}
inline std::string* SolicitudSMS::mutable_telefono() {
  // @@protoc_insertion_point(field_mutable:toDusPB.SolicitudSMS.telefono)
  return _internal_mutable_telefono();
}
inline const std::string& SolicitudSMS::_internal_telefono() const {
  return telefono_.Get();
}
inline void SolicitudSMS::_internal_set_telefono(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SolicitudSMS::set_telefono(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.SolicitudSMS.telefono)
}
inline void SolicitudSMS::set_telefono(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.SolicitudSMS.telefono)
}
inline void SolicitudSMS::set_telefono(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.SolicitudSMS.telefono)
}
inline std::string* SolicitudSMS::_internal_mutable_telefono() {
  _has_bits_[0] |= 0x00000001u;
  return telefono_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SolicitudSMS::release_telefono() {
  // @@protoc_insertion_point(field_release:toDusPB.SolicitudSMS.telefono)
  if (!_internal_has_telefono()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return telefono_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SolicitudSMS::set_allocated_telefono(std::string* telefono) {
  if (telefono != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  telefono_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), telefono,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.SolicitudSMS.telefono)
}

// required string id = 2;
inline bool SolicitudSMS::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SolicitudSMS::has_id() const {
  return _internal_has_id();
}
inline void SolicitudSMS::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SolicitudSMS::id() const {
  // @@protoc_insertion_point(field_get:toDusPB.SolicitudSMS.id)
  return _internal_id();
}
inline void SolicitudSMS::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:toDusPB.SolicitudSMS.id)
}
inline std::string* SolicitudSMS::mutable_id() {
  // @@protoc_insertion_point(field_mutable:toDusPB.SolicitudSMS.id)
  return _internal_mutable_id();
}
inline const std::string& SolicitudSMS::_internal_id() const {
  return id_.Get();
}
inline void SolicitudSMS::_internal_set_id(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SolicitudSMS::set_id(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.SolicitudSMS.id)
}
inline void SolicitudSMS::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.SolicitudSMS.id)
}
inline void SolicitudSMS::set_id(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.SolicitudSMS.id)
}
inline std::string* SolicitudSMS::_internal_mutable_id() {
  _has_bits_[0] |= 0x00000002u;
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SolicitudSMS::release_id() {
  // @@protoc_insertion_point(field_release:toDusPB.SolicitudSMS.id)
  if (!_internal_has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SolicitudSMS::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.SolicitudSMS.id)
}

// -------------------------------------------------------------------

// SolicitudFichaSolicitud

// required string telefono = 1;
inline bool SolicitudFichaSolicitud::_internal_has_telefono() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SolicitudFichaSolicitud::has_telefono() const {
  return _internal_has_telefono();
}
inline void SolicitudFichaSolicitud::clear_telefono() {
  telefono_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SolicitudFichaSolicitud::telefono() const {
  // @@protoc_insertion_point(field_get:toDusPB.SolicitudFichaSolicitud.telefono)
  return _internal_telefono();
}
inline void SolicitudFichaSolicitud::set_telefono(const std::string& value) {
  _internal_set_telefono(value);
  // @@protoc_insertion_point(field_set:toDusPB.SolicitudFichaSolicitud.telefono)
}
inline std::string* SolicitudFichaSolicitud::mutable_telefono() {
  // @@protoc_insertion_point(field_mutable:toDusPB.SolicitudFichaSolicitud.telefono)
  return _internal_mutable_telefono();
}
inline const std::string& SolicitudFichaSolicitud::_internal_telefono() const {
  return telefono_.Get();
}
inline void SolicitudFichaSolicitud::_internal_set_telefono(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SolicitudFichaSolicitud::set_telefono(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.SolicitudFichaSolicitud.telefono)
}
inline void SolicitudFichaSolicitud::set_telefono(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.SolicitudFichaSolicitud.telefono)
}
inline void SolicitudFichaSolicitud::set_telefono(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.SolicitudFichaSolicitud.telefono)
}
inline std::string* SolicitudFichaSolicitud::_internal_mutable_telefono() {
  _has_bits_[0] |= 0x00000001u;
  return telefono_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SolicitudFichaSolicitud::release_telefono() {
  // @@protoc_insertion_point(field_release:toDusPB.SolicitudFichaSolicitud.telefono)
  if (!_internal_has_telefono()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return telefono_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SolicitudFichaSolicitud::set_allocated_telefono(std::string* telefono) {
  if (telefono != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  telefono_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), telefono,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.SolicitudFichaSolicitud.telefono)
}

// required string id = 2;
inline bool SolicitudFichaSolicitud::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SolicitudFichaSolicitud::has_id() const {
  return _internal_has_id();
}
inline void SolicitudFichaSolicitud::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SolicitudFichaSolicitud::id() const {
  // @@protoc_insertion_point(field_get:toDusPB.SolicitudFichaSolicitud.id)
  return _internal_id();
}
inline void SolicitudFichaSolicitud::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:toDusPB.SolicitudFichaSolicitud.id)
}
inline std::string* SolicitudFichaSolicitud::mutable_id() {
  // @@protoc_insertion_point(field_mutable:toDusPB.SolicitudFichaSolicitud.id)
  return _internal_mutable_id();
}
inline const std::string& SolicitudFichaSolicitud::_internal_id() const {
  return id_.Get();
}
inline void SolicitudFichaSolicitud::_internal_set_id(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SolicitudFichaSolicitud::set_id(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.SolicitudFichaSolicitud.id)
}
inline void SolicitudFichaSolicitud::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.SolicitudFichaSolicitud.id)
}
inline void SolicitudFichaSolicitud::set_id(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.SolicitudFichaSolicitud.id)
}
inline std::string* SolicitudFichaSolicitud::_internal_mutable_id() {
  _has_bits_[0] |= 0x00000002u;
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SolicitudFichaSolicitud::release_id() {
  // @@protoc_insertion_point(field_release:toDusPB.SolicitudFichaSolicitud.id)
  if (!_internal_has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SolicitudFichaSolicitud::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.SolicitudFichaSolicitud.id)
}

// required string codigo = 3;
inline bool SolicitudFichaSolicitud::_internal_has_codigo() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SolicitudFichaSolicitud::has_codigo() const {
  return _internal_has_codigo();
}
inline void SolicitudFichaSolicitud::clear_codigo() {
  codigo_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SolicitudFichaSolicitud::codigo() const {
  // @@protoc_insertion_point(field_get:toDusPB.SolicitudFichaSolicitud.codigo)
  return _internal_codigo();
}
inline void SolicitudFichaSolicitud::set_codigo(const std::string& value) {
  _internal_set_codigo(value);
  // @@protoc_insertion_point(field_set:toDusPB.SolicitudFichaSolicitud.codigo)
}
inline std::string* SolicitudFichaSolicitud::mutable_codigo() {
  // @@protoc_insertion_point(field_mutable:toDusPB.SolicitudFichaSolicitud.codigo)
  return _internal_mutable_codigo();
}
inline const std::string& SolicitudFichaSolicitud::_internal_codigo() const {
  return codigo_.Get();
}
inline void SolicitudFichaSolicitud::_internal_set_codigo(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  codigo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SolicitudFichaSolicitud::set_codigo(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  codigo_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.SolicitudFichaSolicitud.codigo)
}
inline void SolicitudFichaSolicitud::set_codigo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  codigo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.SolicitudFichaSolicitud.codigo)
}
inline void SolicitudFichaSolicitud::set_codigo(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  codigo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.SolicitudFichaSolicitud.codigo)
}
inline std::string* SolicitudFichaSolicitud::_internal_mutable_codigo() {
  _has_bits_[0] |= 0x00000004u;
  return codigo_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SolicitudFichaSolicitud::release_codigo() {
  // @@protoc_insertion_point(field_release:toDusPB.SolicitudFichaSolicitud.codigo)
  if (!_internal_has_codigo()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return codigo_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SolicitudFichaSolicitud::set_allocated_codigo(std::string* codigo) {
  if (codigo != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  codigo_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), codigo,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.SolicitudFichaSolicitud.codigo)
}

// -------------------------------------------------------------------

// RecepcionFichaSolicitud_DatosUsuario

// required string telefono = 1;
inline bool RecepcionFichaSolicitud_DatosUsuario::_internal_has_telefono() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RecepcionFichaSolicitud_DatosUsuario::has_telefono() const {
  return _internal_has_telefono();
}
inline void RecepcionFichaSolicitud_DatosUsuario::clear_telefono() {
  telefono_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::telefono() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono)
  return _internal_telefono();
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_telefono(const std::string& value) {
  _internal_set_telefono(value);
  // @@protoc_insertion_point(field_set:toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::mutable_telefono() {
  // @@protoc_insertion_point(field_mutable:toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono)
  return _internal_mutable_telefono();
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::_internal_telefono() const {
  return telefono_.Get();
}
inline void RecepcionFichaSolicitud_DatosUsuario::_internal_set_telefono(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_telefono(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_telefono(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_telefono(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::_internal_mutable_telefono() {
  _has_bits_[0] |= 0x00000001u;
  return telefono_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::release_telefono() {
  // @@protoc_insertion_point(field_release:toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono)
  if (!_internal_has_telefono()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return telefono_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_allocated_telefono(std::string* telefono) {
  if (telefono != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  telefono_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), telefono,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono)
}

// optional string nombre = 2;
inline bool RecepcionFichaSolicitud_DatosUsuario::_internal_has_nombre() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RecepcionFichaSolicitud_DatosUsuario::has_nombre() const {
  return _internal_has_nombre();
}
inline void RecepcionFichaSolicitud_DatosUsuario::clear_nombre() {
  nombre_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::nombre() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre)
  return _internal_nombre();
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_nombre(const std::string& value) {
  _internal_set_nombre(value);
  // @@protoc_insertion_point(field_set:toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::mutable_nombre() {
  // @@protoc_insertion_point(field_mutable:toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre)
  return _internal_mutable_nombre();
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::_internal_nombre() const {
  return nombre_.Get();
}
inline void RecepcionFichaSolicitud_DatosUsuario::_internal_set_nombre(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  nombre_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_nombre(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  nombre_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_nombre(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  nombre_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_nombre(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  nombre_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::_internal_mutable_nombre() {
  _has_bits_[0] |= 0x00000002u;
  return nombre_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::release_nombre() {
  // @@protoc_insertion_point(field_release:toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre)
  if (!_internal_has_nombre()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return nombre_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_allocated_nombre(std::string* nombre) {
  if (nombre != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  nombre_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nombre,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre)
}

// optional string enlaceFoto = 3;
inline bool RecepcionFichaSolicitud_DatosUsuario::_internal_has_enlacefoto() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool RecepcionFichaSolicitud_DatosUsuario::has_enlacefoto() const {
  return _internal_has_enlacefoto();
}
inline void RecepcionFichaSolicitud_DatosUsuario::clear_enlacefoto() {
  enlacefoto_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::enlacefoto() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto)
  return _internal_enlacefoto();
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_enlacefoto(const std::string& value) {
  _internal_set_enlacefoto(value);
  // @@protoc_insertion_point(field_set:toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::mutable_enlacefoto() {
  // @@protoc_insertion_point(field_mutable:toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto)
  return _internal_mutable_enlacefoto();
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::_internal_enlacefoto() const {
  return enlacefoto_.Get();
}
inline void RecepcionFichaSolicitud_DatosUsuario::_internal_set_enlacefoto(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  enlacefoto_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_enlacefoto(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  enlacefoto_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_enlacefoto(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  enlacefoto_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_enlacefoto(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  enlacefoto_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::_internal_mutable_enlacefoto() {
  _has_bits_[0] |= 0x00000004u;
  return enlacefoto_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::release_enlacefoto() {
  // @@protoc_insertion_point(field_release:toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto)
  if (!_internal_has_enlacefoto()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return enlacefoto_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_allocated_enlacefoto(std::string* enlacefoto) {
  if (enlacefoto != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  enlacefoto_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), enlacefoto,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto)
}

// optional string reservado1 = 4;
inline bool RecepcionFichaSolicitud_DatosUsuario::_internal_has_reservado1() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool RecepcionFichaSolicitud_DatosUsuario::has_reservado1() const {
  return _internal_has_reservado1();
}
inline void RecepcionFichaSolicitud_DatosUsuario::clear_reservado1() {
  reservado1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::reservado1() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1)
  return _internal_reservado1();
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_reservado1(const std::string& value) {
  _internal_set_reservado1(value);
  // @@protoc_insertion_point(field_set:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::mutable_reservado1() {
  // @@protoc_insertion_point(field_mutable:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1)
  return _internal_mutable_reservado1();
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::_internal_reservado1() const {
  return reservado1_.Get();
}
inline void RecepcionFichaSolicitud_DatosUsuario::_internal_set_reservado1(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  reservado1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_reservado1(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  reservado1_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_reservado1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  reservado1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_reservado1(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  reservado1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::_internal_mutable_reservado1() {
  _has_bits_[0] |= 0x00000008u;
  return reservado1_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::release_reservado1() {
  // @@protoc_insertion_point(field_release:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1)
  if (!_internal_has_reservado1()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return reservado1_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_allocated_reservado1(std::string* reservado1) {
  if (reservado1 != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  reservado1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reservado1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1)
}

// optional string reservado2 = 5;
inline bool RecepcionFichaSolicitud_DatosUsuario::_internal_has_reservado2() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool RecepcionFichaSolicitud_DatosUsuario::has_reservado2() const {
  return _internal_has_reservado2();
}
inline void RecepcionFichaSolicitud_DatosUsuario::clear_reservado2() {
  reservado2_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::reservado2() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2)
  return _internal_reservado2();
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_reservado2(const std::string& value) {
  _internal_set_reservado2(value);
  // @@protoc_insertion_point(field_set:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::mutable_reservado2() {
  // @@protoc_insertion_point(field_mutable:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2)
  return _internal_mutable_reservado2();
}
inline const std::string& RecepcionFichaSolicitud_DatosUsuario::_internal_reservado2() const {
  return reservado2_.Get();
}
inline void RecepcionFichaSolicitud_DatosUsuario::_internal_set_reservado2(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  reservado2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_reservado2(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  reservado2_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_reservado2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  reservado2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2)
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_reservado2(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  reservado2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2)
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::_internal_mutable_reservado2() {
  _has_bits_[0] |= 0x00000010u;
  return reservado2_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* RecepcionFichaSolicitud_DatosUsuario::release_reservado2() {
  // @@protoc_insertion_point(field_release:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2)
  if (!_internal_has_reservado2()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return reservado2_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecepcionFichaSolicitud_DatosUsuario::set_allocated_reservado2(std::string* reservado2) {
  if (reservado2 != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  reservado2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reservado2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2)
}

// -------------------------------------------------------------------

// RecepcionFichaSolicitud

// required string fichaSolicitud = 1;
inline bool RecepcionFichaSolicitud::_internal_has_fichasolicitud() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RecepcionFichaSolicitud::has_fichasolicitud() const {
  return _internal_has_fichasolicitud();
}
inline void RecepcionFichaSolicitud::clear_fichasolicitud() {
  fichasolicitud_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RecepcionFichaSolicitud::fichasolicitud() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaSolicitud.fichaSolicitud)
  return _internal_fichasolicitud();
}
inline void RecepcionFichaSolicitud::set_fichasolicitud(const std::string& value) {
  _internal_set_fichasolicitud(value);
  // @@protoc_insertion_point(field_set:toDusPB.RecepcionFichaSolicitud.fichaSolicitud)
}
inline std::string* RecepcionFichaSolicitud::mutable_fichasolicitud() {
  // @@protoc_insertion_point(field_mutable:toDusPB.RecepcionFichaSolicitud.fichaSolicitud)
  return _internal_mutable_fichasolicitud();
}
inline const std::string& RecepcionFichaSolicitud::_internal_fichasolicitud() const {
  return fichasolicitud_.Get();
}
inline void RecepcionFichaSolicitud::_internal_set_fichasolicitud(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  fichasolicitud_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void RecepcionFichaSolicitud::set_fichasolicitud(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  fichasolicitud_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.RecepcionFichaSolicitud.fichaSolicitud)
}
inline void RecepcionFichaSolicitud::set_fichasolicitud(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  fichasolicitud_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.RecepcionFichaSolicitud.fichaSolicitud)
}
inline void RecepcionFichaSolicitud::set_fichasolicitud(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  fichasolicitud_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.RecepcionFichaSolicitud.fichaSolicitud)
}
inline std::string* RecepcionFichaSolicitud::_internal_mutable_fichasolicitud() {
  _has_bits_[0] |= 0x00000001u;
  return fichasolicitud_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* RecepcionFichaSolicitud::release_fichasolicitud() {
  // @@protoc_insertion_point(field_release:toDusPB.RecepcionFichaSolicitud.fichaSolicitud)
  if (!_internal_has_fichasolicitud()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return fichasolicitud_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecepcionFichaSolicitud::set_allocated_fichasolicitud(std::string* fichasolicitud) {
  if (fichasolicitud != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  fichasolicitud_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fichasolicitud,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.RecepcionFichaSolicitud.fichaSolicitud)
}

// required .toDusPB.RecepcionFichaSolicitud.DatosUsuario usuario = 2;
inline bool RecepcionFichaSolicitud::_internal_has_usuario() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || usuario_ != nullptr);
  return value;
}
inline bool RecepcionFichaSolicitud::has_usuario() const {
  return _internal_has_usuario();
}
inline void RecepcionFichaSolicitud::clear_usuario() {
  if (usuario_ != nullptr) usuario_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::toDusPB::RecepcionFichaSolicitud_DatosUsuario& RecepcionFichaSolicitud::_internal_usuario() const {
  const ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* p = usuario_;
  return p != nullptr ? *p : *reinterpret_cast<const ::toDusPB::RecepcionFichaSolicitud_DatosUsuario*>(
      &::toDusPB::_RecepcionFichaSolicitud_DatosUsuario_default_instance_);
}
inline const ::toDusPB::RecepcionFichaSolicitud_DatosUsuario& RecepcionFichaSolicitud::usuario() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaSolicitud.usuario)
  return _internal_usuario();
}
inline void RecepcionFichaSolicitud::unsafe_arena_set_allocated_usuario(
    ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* usuario) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(usuario_);
  }
  usuario_ = usuario;
  if (usuario) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:toDusPB.RecepcionFichaSolicitud.usuario)
}
inline ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* RecepcionFichaSolicitud::release_usuario() {
  _has_bits_[0] &= ~0x00000002u;
  ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* temp = usuario_;
  usuario_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* RecepcionFichaSolicitud::unsafe_arena_release_usuario() {
  // @@protoc_insertion_point(field_release:toDusPB.RecepcionFichaSolicitud.usuario)
  _has_bits_[0] &= ~0x00000002u;
  ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* temp = usuario_;
  usuario_ = nullptr;
  return temp;
}
inline ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* RecepcionFichaSolicitud::_internal_mutable_usuario() {
  _has_bits_[0] |= 0x00000002u;
  if (usuario_ == nullptr) {
    auto* p = CreateMaybeMessage<::toDusPB::RecepcionFichaSolicitud_DatosUsuario>(GetArena());
    usuario_ = p;
  }
  return usuario_;
}
inline ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* RecepcionFichaSolicitud::mutable_usuario() {
  // @@protoc_insertion_point(field_mutable:toDusPB.RecepcionFichaSolicitud.usuario)
  return _internal_mutable_usuario();
}
inline void RecepcionFichaSolicitud::set_allocated_usuario(::toDusPB::RecepcionFichaSolicitud_DatosUsuario* usuario) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete usuario_;
  }
  if (usuario) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(usuario);
    if (message_arena != submessage_arena) {
      usuario = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, usuario, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  usuario_ = usuario;
  // @@protoc_insertion_point(field_set_allocated:toDusPB.RecepcionFichaSolicitud.usuario)
}

// -------------------------------------------------------------------

// SolicitudFichaAcceso

// required string telefono = 1;
inline bool SolicitudFichaAcceso::_internal_has_telefono() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SolicitudFichaAcceso::has_telefono() const {
  return _internal_has_telefono();
}
inline void SolicitudFichaAcceso::clear_telefono() {
  telefono_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SolicitudFichaAcceso::telefono() const {
  // @@protoc_insertion_point(field_get:toDusPB.SolicitudFichaAcceso.telefono)
  return _internal_telefono();
}
inline void SolicitudFichaAcceso::set_telefono(const std::string& value) {
  _internal_set_telefono(value);
  // @@protoc_insertion_point(field_set:toDusPB.SolicitudFichaAcceso.telefono)
}
inline std::string* SolicitudFichaAcceso::mutable_telefono() {
  // @@protoc_insertion_point(field_mutable:toDusPB.SolicitudFichaAcceso.telefono)
  return _internal_mutable_telefono();
}
inline const std::string& SolicitudFichaAcceso::_internal_telefono() const {
  return telefono_.Get();
}
inline void SolicitudFichaAcceso::_internal_set_telefono(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SolicitudFichaAcceso::set_telefono(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.SolicitudFichaAcceso.telefono)
}
inline void SolicitudFichaAcceso::set_telefono(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.SolicitudFichaAcceso.telefono)
}
inline void SolicitudFichaAcceso::set_telefono(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.SolicitudFichaAcceso.telefono)
}
inline std::string* SolicitudFichaAcceso::_internal_mutable_telefono() {
  _has_bits_[0] |= 0x00000001u;
  return telefono_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SolicitudFichaAcceso::release_telefono() {
  // @@protoc_insertion_point(field_release:toDusPB.SolicitudFichaAcceso.telefono)
  if (!_internal_has_telefono()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return telefono_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SolicitudFichaAcceso::set_allocated_telefono(std::string* telefono) {
  if (telefono != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  telefono_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), telefono,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.SolicitudFichaAcceso.telefono)
}

// required string fichaSolicitud = 2;
inline bool SolicitudFichaAcceso::_internal_has_fichasolicitud() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SolicitudFichaAcceso::has_fichasolicitud() const {
  return _internal_has_fichasolicitud();
}
inline void SolicitudFichaAcceso::clear_fichasolicitud() {
  fichasolicitud_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SolicitudFichaAcceso::fichasolicitud() const {
  // @@protoc_insertion_point(field_get:toDusPB.SolicitudFichaAcceso.fichaSolicitud)
  return _internal_fichasolicitud();
}
inline void SolicitudFichaAcceso::set_fichasolicitud(const std::string& value) {
  _internal_set_fichasolicitud(value);
  // @@protoc_insertion_point(field_set:toDusPB.SolicitudFichaAcceso.fichaSolicitud)
}
inline std::string* SolicitudFichaAcceso::mutable_fichasolicitud() {
  // @@protoc_insertion_point(field_mutable:toDusPB.SolicitudFichaAcceso.fichaSolicitud)
  return _internal_mutable_fichasolicitud();
}
inline const std::string& SolicitudFichaAcceso::_internal_fichasolicitud() const {
  return fichasolicitud_.Get();
}
inline void SolicitudFichaAcceso::_internal_set_fichasolicitud(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  fichasolicitud_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SolicitudFichaAcceso::set_fichasolicitud(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  fichasolicitud_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.SolicitudFichaAcceso.fichaSolicitud)
}
inline void SolicitudFichaAcceso::set_fichasolicitud(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  fichasolicitud_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.SolicitudFichaAcceso.fichaSolicitud)
}
inline void SolicitudFichaAcceso::set_fichasolicitud(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  fichasolicitud_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.SolicitudFichaAcceso.fichaSolicitud)
}
inline std::string* SolicitudFichaAcceso::_internal_mutable_fichasolicitud() {
  _has_bits_[0] |= 0x00000002u;
  return fichasolicitud_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SolicitudFichaAcceso::release_fichasolicitud() {
  // @@protoc_insertion_point(field_release:toDusPB.SolicitudFichaAcceso.fichaSolicitud)
  if (!_internal_has_fichasolicitud()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return fichasolicitud_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SolicitudFichaAcceso::set_allocated_fichasolicitud(std::string* fichasolicitud) {
  if (fichasolicitud != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  fichasolicitud_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fichasolicitud,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.SolicitudFichaAcceso.fichaSolicitud)
}

// required string numeroVersion = 3;
inline bool SolicitudFichaAcceso::_internal_has_numeroversion() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SolicitudFichaAcceso::has_numeroversion() const {
  return _internal_has_numeroversion();
}
inline void SolicitudFichaAcceso::clear_numeroversion() {
  numeroversion_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SolicitudFichaAcceso::numeroversion() const {
  // @@protoc_insertion_point(field_get:toDusPB.SolicitudFichaAcceso.numeroVersion)
  return _internal_numeroversion();
}
inline void SolicitudFichaAcceso::set_numeroversion(const std::string& value) {
  _internal_set_numeroversion(value);
  // @@protoc_insertion_point(field_set:toDusPB.SolicitudFichaAcceso.numeroVersion)
}
inline std::string* SolicitudFichaAcceso::mutable_numeroversion() {
  // @@protoc_insertion_point(field_mutable:toDusPB.SolicitudFichaAcceso.numeroVersion)
  return _internal_mutable_numeroversion();
}
inline const std::string& SolicitudFichaAcceso::_internal_numeroversion() const {
  return numeroversion_.Get();
}
inline void SolicitudFichaAcceso::_internal_set_numeroversion(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  numeroversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SolicitudFichaAcceso::set_numeroversion(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  numeroversion_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.SolicitudFichaAcceso.numeroVersion)
}
inline void SolicitudFichaAcceso::set_numeroversion(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  numeroversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.SolicitudFichaAcceso.numeroVersion)
}
inline void SolicitudFichaAcceso::set_numeroversion(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  numeroversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.SolicitudFichaAcceso.numeroVersion)
}
inline std::string* SolicitudFichaAcceso::_internal_mutable_numeroversion() {
  _has_bits_[0] |= 0x00000004u;
  return numeroversion_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SolicitudFichaAcceso::release_numeroversion() {
  // @@protoc_insertion_point(field_release:toDusPB.SolicitudFichaAcceso.numeroVersion)
  if (!_internal_has_numeroversion()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return numeroversion_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SolicitudFichaAcceso::set_allocated_numeroversion(std::string* numeroversion) {
  if (numeroversion != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  numeroversion_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), numeroversion,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.SolicitudFichaAcceso.numeroVersion)
}

// -------------------------------------------------------------------

// RecepcionFichaAcceso

// required int32 reservado1 = 1;
inline bool RecepcionFichaAcceso::_internal_has_reservado1() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RecepcionFichaAcceso::has_reservado1() const {
  return _internal_has_reservado1();
}
inline void RecepcionFichaAcceso::clear_reservado1() {
  reservado1_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RecepcionFichaAcceso::_internal_reservado1() const {
  return reservado1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RecepcionFichaAcceso::reservado1() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaAcceso.reservado1)
  return _internal_reservado1();
}
inline void RecepcionFichaAcceso::_internal_set_reservado1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  reservado1_ = value;
}
inline void RecepcionFichaAcceso::set_reservado1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reservado1(value);
  // @@protoc_insertion_point(field_set:toDusPB.RecepcionFichaAcceso.reservado1)
}

// required string fichaAcceso = 2;
inline bool RecepcionFichaAcceso::_internal_has_fichaacceso() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RecepcionFichaAcceso::has_fichaacceso() const {
  return _internal_has_fichaacceso();
}
inline void RecepcionFichaAcceso::clear_fichaacceso() {
  fichaacceso_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RecepcionFichaAcceso::fichaacceso() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaAcceso.fichaAcceso)
  return _internal_fichaacceso();
}
inline void RecepcionFichaAcceso::set_fichaacceso(const std::string& value) {
  _internal_set_fichaacceso(value);
  // @@protoc_insertion_point(field_set:toDusPB.RecepcionFichaAcceso.fichaAcceso)
}
inline std::string* RecepcionFichaAcceso::mutable_fichaacceso() {
  // @@protoc_insertion_point(field_mutable:toDusPB.RecepcionFichaAcceso.fichaAcceso)
  return _internal_mutable_fichaacceso();
}
inline const std::string& RecepcionFichaAcceso::_internal_fichaacceso() const {
  return fichaacceso_.Get();
}
inline void RecepcionFichaAcceso::_internal_set_fichaacceso(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  fichaacceso_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void RecepcionFichaAcceso::set_fichaacceso(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  fichaacceso_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:toDusPB.RecepcionFichaAcceso.fichaAcceso)
}
inline void RecepcionFichaAcceso::set_fichaacceso(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  fichaacceso_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:toDusPB.RecepcionFichaAcceso.fichaAcceso)
}
inline void RecepcionFichaAcceso::set_fichaacceso(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  fichaacceso_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:toDusPB.RecepcionFichaAcceso.fichaAcceso)
}
inline std::string* RecepcionFichaAcceso::_internal_mutable_fichaacceso() {
  _has_bits_[0] |= 0x00000001u;
  return fichaacceso_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* RecepcionFichaAcceso::release_fichaacceso() {
  // @@protoc_insertion_point(field_release:toDusPB.RecepcionFichaAcceso.fichaAcceso)
  if (!_internal_has_fichaacceso()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return fichaacceso_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RecepcionFichaAcceso::set_allocated_fichaacceso(std::string* fichaacceso) {
  if (fichaacceso != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  fichaacceso_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fichaacceso,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:toDusPB.RecepcionFichaAcceso.fichaAcceso)
}

// required int32 tiempoExpiracion = 3;
inline bool RecepcionFichaAcceso::_internal_has_tiempoexpiracion() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool RecepcionFichaAcceso::has_tiempoexpiracion() const {
  return _internal_has_tiempoexpiracion();
}
inline void RecepcionFichaAcceso::clear_tiempoexpiracion() {
  tiempoexpiracion_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RecepcionFichaAcceso::_internal_tiempoexpiracion() const {
  return tiempoexpiracion_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RecepcionFichaAcceso::tiempoexpiracion() const {
  // @@protoc_insertion_point(field_get:toDusPB.RecepcionFichaAcceso.tiempoExpiracion)
  return _internal_tiempoexpiracion();
}
inline void RecepcionFichaAcceso::_internal_set_tiempoexpiracion(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  tiempoexpiracion_ = value;
}
inline void RecepcionFichaAcceso::set_tiempoexpiracion(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tiempoexpiracion(value);
  // @@protoc_insertion_point(field_set:toDusPB.RecepcionFichaAcceso.tiempoExpiracion)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace toDusPB

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_todus_2eproto
