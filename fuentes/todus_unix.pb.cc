// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: todus.proto

#include "todus_unix.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_todus_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecepcionFichaSolicitud_DatosUsuario_todus_2eproto;
namespace toDusPB {
class SolicitudSMSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SolicitudSMS> _instance;
} _SolicitudSMS_default_instance_;
class SolicitudFichaSolicitudDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SolicitudFichaSolicitud> _instance;
} _SolicitudFichaSolicitud_default_instance_;
class RecepcionFichaSolicitud_DatosUsuarioDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecepcionFichaSolicitud_DatosUsuario> _instance;
} _RecepcionFichaSolicitud_DatosUsuario_default_instance_;
class RecepcionFichaSolicitudDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecepcionFichaSolicitud> _instance;
} _RecepcionFichaSolicitud_default_instance_;
class SolicitudFichaAccesoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SolicitudFichaAcceso> _instance;
} _SolicitudFichaAcceso_default_instance_;
class RecepcionFichaAccesoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecepcionFichaAcceso> _instance;
} _RecepcionFichaAcceso_default_instance_;
}  // namespace toDusPB
static void InitDefaultsscc_info_RecepcionFichaAcceso_todus_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toDusPB::_RecepcionFichaAcceso_default_instance_;
    new (ptr) ::toDusPB::RecepcionFichaAcceso();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toDusPB::RecepcionFichaAcceso::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecepcionFichaAcceso_todus_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RecepcionFichaAcceso_todus_2eproto}, {}};

static void InitDefaultsscc_info_RecepcionFichaSolicitud_todus_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toDusPB::_RecepcionFichaSolicitud_default_instance_;
    new (ptr) ::toDusPB::RecepcionFichaSolicitud();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toDusPB::RecepcionFichaSolicitud::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RecepcionFichaSolicitud_todus_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RecepcionFichaSolicitud_todus_2eproto}, {
      &scc_info_RecepcionFichaSolicitud_DatosUsuario_todus_2eproto.base,}};

static void InitDefaultsscc_info_RecepcionFichaSolicitud_DatosUsuario_todus_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toDusPB::_RecepcionFichaSolicitud_DatosUsuario_default_instance_;
    new (ptr) ::toDusPB::RecepcionFichaSolicitud_DatosUsuario();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toDusPB::RecepcionFichaSolicitud_DatosUsuario::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecepcionFichaSolicitud_DatosUsuario_todus_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RecepcionFichaSolicitud_DatosUsuario_todus_2eproto}, {}};

static void InitDefaultsscc_info_SolicitudFichaAcceso_todus_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toDusPB::_SolicitudFichaAcceso_default_instance_;
    new (ptr) ::toDusPB::SolicitudFichaAcceso();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toDusPB::SolicitudFichaAcceso::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SolicitudFichaAcceso_todus_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SolicitudFichaAcceso_todus_2eproto}, {}};

static void InitDefaultsscc_info_SolicitudFichaSolicitud_todus_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toDusPB::_SolicitudFichaSolicitud_default_instance_;
    new (ptr) ::toDusPB::SolicitudFichaSolicitud();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toDusPB::SolicitudFichaSolicitud::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SolicitudFichaSolicitud_todus_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SolicitudFichaSolicitud_todus_2eproto}, {}};

static void InitDefaultsscc_info_SolicitudSMS_todus_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::toDusPB::_SolicitudSMS_default_instance_;
    new (ptr) ::toDusPB::SolicitudSMS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::toDusPB::SolicitudSMS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SolicitudSMS_todus_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SolicitudSMS_todus_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_todus_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_todus_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_todus_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_todus_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudSMS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudSMS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudSMS, telefono_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudSMS, id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaSolicitud, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaSolicitud, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaSolicitud, telefono_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaSolicitud, id_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaSolicitud, codigo_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud_DatosUsuario, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud_DatosUsuario, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud_DatosUsuario, telefono_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud_DatosUsuario, nombre_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud_DatosUsuario, enlacefoto_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud_DatosUsuario, reservado1_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud_DatosUsuario, reservado2_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud, fichasolicitud_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaSolicitud, usuario_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaAcceso, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaAcceso, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaAcceso, telefono_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaAcceso, fichasolicitud_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::SolicitudFichaAcceso, numeroversion_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaAcceso, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaAcceso, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaAcceso, reservado1_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaAcceso, fichaacceso_),
  PROTOBUF_FIELD_OFFSET(::toDusPB::RecepcionFichaAcceso, tiempoexpiracion_),
  1,
  0,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::toDusPB::SolicitudSMS)},
  { 9, 17, sizeof(::toDusPB::SolicitudFichaSolicitud)},
  { 20, 30, sizeof(::toDusPB::RecepcionFichaSolicitud_DatosUsuario)},
  { 35, 42, sizeof(::toDusPB::RecepcionFichaSolicitud)},
  { 44, 52, sizeof(::toDusPB::SolicitudFichaAcceso)},
  { 55, 63, sizeof(::toDusPB::RecepcionFichaAcceso)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::toDusPB::_SolicitudSMS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::toDusPB::_SolicitudFichaSolicitud_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::toDusPB::_RecepcionFichaSolicitud_DatosUsuario_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::toDusPB::_RecepcionFichaSolicitud_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::toDusPB::_SolicitudFichaAcceso_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::toDusPB::_RecepcionFichaAcceso_default_instance_),
};

const char descriptor_table_protodef_todus_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013todus.proto\022\007toDusPB\",\n\014SolicitudSMS\022\020"
  "\n\010telefono\030\001 \002(\t\022\n\n\002id\030\002 \002(\t\"G\n\027Solicitu"
  "dFichaSolicitud\022\020\n\010telefono\030\001 \002(\t\022\n\n\002id\030"
  "\002 \002(\t\022\016\n\006codigo\030\003 \002(\t\"\337\001\n\027RecepcionFicha"
  "Solicitud\022\026\n\016fichaSolicitud\030\001 \002(\t\022>\n\007usu"
  "ario\030\002 \002(\0132-.toDusPB.RecepcionFichaSolic"
  "itud.DatosUsuario\032l\n\014DatosUsuario\022\020\n\010tel"
  "efono\030\001 \002(\t\022\016\n\006nombre\030\002 \001(\t\022\022\n\nenlaceFot"
  "o\030\003 \001(\t\022\022\n\nreservado1\030\004 \001(\t\022\022\n\nreservado"
  "2\030\005 \001(\t\"W\n\024SolicitudFichaAcceso\022\020\n\010telef"
  "ono\030\001 \002(\t\022\026\n\016fichaSolicitud\030\002 \002(\t\022\025\n\rnum"
  "eroVersion\030\003 \002(\t\"Y\n\024RecepcionFichaAcceso"
  "\022\022\n\nreservado1\030\001 \002(\005\022\023\n\013fichaAcceso\030\002 \002("
  "\t\022\030\n\020tiempoExpiracion\030\003 \002(\005"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_todus_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_todus_2eproto_sccs[6] = {
  &scc_info_RecepcionFichaAcceso_todus_2eproto.base,
  &scc_info_RecepcionFichaSolicitud_todus_2eproto.base,
  &scc_info_RecepcionFichaSolicitud_DatosUsuario_todus_2eproto.base,
  &scc_info_SolicitudFichaAcceso_todus_2eproto.base,
  &scc_info_SolicitudFichaSolicitud_todus_2eproto.base,
  &scc_info_SolicitudSMS_todus_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_todus_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_todus_2eproto = {
  false, false, descriptor_table_protodef_todus_2eproto, "todus.proto", 547,
  &descriptor_table_todus_2eproto_once, descriptor_table_todus_2eproto_sccs, descriptor_table_todus_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_todus_2eproto::offsets,
  file_level_metadata_todus_2eproto, 6, file_level_enum_descriptors_todus_2eproto, file_level_service_descriptors_todus_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_todus_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_todus_2eproto)), true);
namespace toDusPB {

// ===================================================================

void SolicitudSMS::InitAsDefaultInstance() {
}
class SolicitudSMS::_Internal {
 public:
  using HasBits = decltype(std::declval<SolicitudSMS>()._has_bits_);
  static void set_has_telefono(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

SolicitudSMS::SolicitudSMS(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:toDusPB.SolicitudSMS)
}
SolicitudSMS::SolicitudSMS(const SolicitudSMS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  telefono_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_telefono()) {
    telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_telefono(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_id()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:toDusPB.SolicitudSMS)
}

void SolicitudSMS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SolicitudSMS_todus_2eproto.base);
  telefono_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SolicitudSMS::~SolicitudSMS() {
  // @@protoc_insertion_point(destructor:toDusPB.SolicitudSMS)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SolicitudSMS::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  telefono_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SolicitudSMS::ArenaDtor(void* object) {
  SolicitudSMS* _this = reinterpret_cast< SolicitudSMS* >(object);
  (void)_this;
}
void SolicitudSMS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SolicitudSMS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SolicitudSMS& SolicitudSMS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SolicitudSMS_todus_2eproto.base);
  return *internal_default_instance();
}


void SolicitudSMS::Clear() {
// @@protoc_insertion_point(message_clear_start:toDusPB.SolicitudSMS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      telefono_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      id_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SolicitudSMS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string telefono = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_telefono();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.SolicitudSMS.telefono");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.SolicitudSMS.id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SolicitudSMS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:toDusPB.SolicitudSMS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string telefono = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_telefono().data(), static_cast<int>(this->_internal_telefono().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.SolicitudSMS.telefono");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_telefono(), target);
  }

  // required string id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.SolicitudSMS.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toDusPB.SolicitudSMS)
  return target;
}

size_t SolicitudSMS::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:toDusPB.SolicitudSMS)
  size_t total_size = 0;

  if (_internal_has_telefono()) {
    // required string telefono = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_telefono());
  }

  if (_internal_has_id()) {
    // required string id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return total_size;
}
size_t SolicitudSMS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toDusPB.SolicitudSMS)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string telefono = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_telefono());

    // required string id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolicitudSMS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toDusPB.SolicitudSMS)
  GOOGLE_DCHECK_NE(&from, this);
  const SolicitudSMS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SolicitudSMS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toDusPB.SolicitudSMS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toDusPB.SolicitudSMS)
    MergeFrom(*source);
  }
}

void SolicitudSMS::MergeFrom(const SolicitudSMS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toDusPB.SolicitudSMS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_telefono(from._internal_telefono());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_id(from._internal_id());
    }
  }
}

void SolicitudSMS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toDusPB.SolicitudSMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolicitudSMS::CopyFrom(const SolicitudSMS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toDusPB.SolicitudSMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolicitudSMS::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SolicitudSMS::InternalSwap(SolicitudSMS* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  telefono_.Swap(&other->telefono_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SolicitudSMS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SolicitudFichaSolicitud::InitAsDefaultInstance() {
}
class SolicitudFichaSolicitud::_Internal {
 public:
  using HasBits = decltype(std::declval<SolicitudFichaSolicitud>()._has_bits_);
  static void set_has_telefono(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_codigo(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

SolicitudFichaSolicitud::SolicitudFichaSolicitud(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:toDusPB.SolicitudFichaSolicitud)
}
SolicitudFichaSolicitud::SolicitudFichaSolicitud(const SolicitudFichaSolicitud& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  telefono_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_telefono()) {
    telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_telefono(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_id()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  codigo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_codigo()) {
    codigo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_codigo(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:toDusPB.SolicitudFichaSolicitud)
}

void SolicitudFichaSolicitud::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SolicitudFichaSolicitud_todus_2eproto.base);
  telefono_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  codigo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SolicitudFichaSolicitud::~SolicitudFichaSolicitud() {
  // @@protoc_insertion_point(destructor:toDusPB.SolicitudFichaSolicitud)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SolicitudFichaSolicitud::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  telefono_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  codigo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SolicitudFichaSolicitud::ArenaDtor(void* object) {
  SolicitudFichaSolicitud* _this = reinterpret_cast< SolicitudFichaSolicitud* >(object);
  (void)_this;
}
void SolicitudFichaSolicitud::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SolicitudFichaSolicitud::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SolicitudFichaSolicitud& SolicitudFichaSolicitud::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SolicitudFichaSolicitud_todus_2eproto.base);
  return *internal_default_instance();
}


void SolicitudFichaSolicitud::Clear() {
// @@protoc_insertion_point(message_clear_start:toDusPB.SolicitudFichaSolicitud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      telefono_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      codigo_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SolicitudFichaSolicitud::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string telefono = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_telefono();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.SolicitudFichaSolicitud.telefono");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.SolicitudFichaSolicitud.id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string codigo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_codigo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.SolicitudFichaSolicitud.codigo");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SolicitudFichaSolicitud::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:toDusPB.SolicitudFichaSolicitud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string telefono = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_telefono().data(), static_cast<int>(this->_internal_telefono().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.SolicitudFichaSolicitud.telefono");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_telefono(), target);
  }

  // required string id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.SolicitudFichaSolicitud.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  // required string codigo = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_codigo().data(), static_cast<int>(this->_internal_codigo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.SolicitudFichaSolicitud.codigo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_codigo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toDusPB.SolicitudFichaSolicitud)
  return target;
}

size_t SolicitudFichaSolicitud::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:toDusPB.SolicitudFichaSolicitud)
  size_t total_size = 0;

  if (_internal_has_telefono()) {
    // required string telefono = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_telefono());
  }

  if (_internal_has_id()) {
    // required string id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (_internal_has_codigo()) {
    // required string codigo = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_codigo());
  }

  return total_size;
}
size_t SolicitudFichaSolicitud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toDusPB.SolicitudFichaSolicitud)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string telefono = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_telefono());

    // required string id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());

    // required string codigo = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_codigo());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolicitudFichaSolicitud::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toDusPB.SolicitudFichaSolicitud)
  GOOGLE_DCHECK_NE(&from, this);
  const SolicitudFichaSolicitud* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SolicitudFichaSolicitud>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toDusPB.SolicitudFichaSolicitud)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toDusPB.SolicitudFichaSolicitud)
    MergeFrom(*source);
  }
}

void SolicitudFichaSolicitud::MergeFrom(const SolicitudFichaSolicitud& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toDusPB.SolicitudFichaSolicitud)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_telefono(from._internal_telefono());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_codigo(from._internal_codigo());
    }
  }
}

void SolicitudFichaSolicitud::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toDusPB.SolicitudFichaSolicitud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolicitudFichaSolicitud::CopyFrom(const SolicitudFichaSolicitud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toDusPB.SolicitudFichaSolicitud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolicitudFichaSolicitud::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SolicitudFichaSolicitud::InternalSwap(SolicitudFichaSolicitud* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  telefono_.Swap(&other->telefono_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  codigo_.Swap(&other->codigo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SolicitudFichaSolicitud::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecepcionFichaSolicitud_DatosUsuario::InitAsDefaultInstance() {
}
class RecepcionFichaSolicitud_DatosUsuario::_Internal {
 public:
  using HasBits = decltype(std::declval<RecepcionFichaSolicitud_DatosUsuario>()._has_bits_);
  static void set_has_telefono(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_nombre(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_enlacefoto(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_reservado1(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_reservado2(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RecepcionFichaSolicitud_DatosUsuario::RecepcionFichaSolicitud_DatosUsuario(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
}
RecepcionFichaSolicitud_DatosUsuario::RecepcionFichaSolicitud_DatosUsuario(const RecepcionFichaSolicitud_DatosUsuario& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  telefono_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_telefono()) {
    telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_telefono(),
      GetArena());
  }
  nombre_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_nombre()) {
    nombre_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_nombre(),
      GetArena());
  }
  enlacefoto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enlacefoto()) {
    enlacefoto_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enlacefoto(),
      GetArena());
  }
  reservado1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_reservado1()) {
    reservado1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reservado1(),
      GetArena());
  }
  reservado2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_reservado2()) {
    reservado2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reservado2(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
}

void RecepcionFichaSolicitud_DatosUsuario::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecepcionFichaSolicitud_DatosUsuario_todus_2eproto.base);
  telefono_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nombre_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enlacefoto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reservado1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reservado2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RecepcionFichaSolicitud_DatosUsuario::~RecepcionFichaSolicitud_DatosUsuario() {
  // @@protoc_insertion_point(destructor:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecepcionFichaSolicitud_DatosUsuario::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  telefono_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nombre_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enlacefoto_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reservado1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reservado2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecepcionFichaSolicitud_DatosUsuario::ArenaDtor(void* object) {
  RecepcionFichaSolicitud_DatosUsuario* _this = reinterpret_cast< RecepcionFichaSolicitud_DatosUsuario* >(object);
  (void)_this;
}
void RecepcionFichaSolicitud_DatosUsuario::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecepcionFichaSolicitud_DatosUsuario::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecepcionFichaSolicitud_DatosUsuario& RecepcionFichaSolicitud_DatosUsuario::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecepcionFichaSolicitud_DatosUsuario_todus_2eproto.base);
  return *internal_default_instance();
}


void RecepcionFichaSolicitud_DatosUsuario::Clear() {
// @@protoc_insertion_point(message_clear_start:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      telefono_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      nombre_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      enlacefoto_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      reservado1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      reservado2_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecepcionFichaSolicitud_DatosUsuario::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string telefono = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_telefono();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string nombre = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_nombre();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string enlaceFoto = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_enlacefoto();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string reservado1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_reservado1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string reservado2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_reservado2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecepcionFichaSolicitud_DatosUsuario::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string telefono = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_telefono().data(), static_cast<int>(this->_internal_telefono().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.RecepcionFichaSolicitud.DatosUsuario.telefono");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_telefono(), target);
  }

  // optional string nombre = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_nombre().data(), static_cast<int>(this->_internal_nombre().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.RecepcionFichaSolicitud.DatosUsuario.nombre");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nombre(), target);
  }

  // optional string enlaceFoto = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enlacefoto().data(), static_cast<int>(this->_internal_enlacefoto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.RecepcionFichaSolicitud.DatosUsuario.enlaceFoto");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_enlacefoto(), target);
  }

  // optional string reservado1 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_reservado1().data(), static_cast<int>(this->_internal_reservado1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado1");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reservado1(), target);
  }

  // optional string reservado2 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_reservado2().data(), static_cast<int>(this->_internal_reservado2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.RecepcionFichaSolicitud.DatosUsuario.reservado2");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_reservado2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
  return target;
}

size_t RecepcionFichaSolicitud_DatosUsuario::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
  size_t total_size = 0;

  // required string telefono = 1;
  if (_internal_has_telefono()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_telefono());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001eu) {
    // optional string nombre = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_nombre());
    }

    // optional string enlaceFoto = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_enlacefoto());
    }

    // optional string reservado1 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_reservado1());
    }

    // optional string reservado2 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_reservado2());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecepcionFichaSolicitud_DatosUsuario::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
  GOOGLE_DCHECK_NE(&from, this);
  const RecepcionFichaSolicitud_DatosUsuario* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecepcionFichaSolicitud_DatosUsuario>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
    MergeFrom(*source);
  }
}

void RecepcionFichaSolicitud_DatosUsuario::MergeFrom(const RecepcionFichaSolicitud_DatosUsuario& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_telefono(from._internal_telefono());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_nombre(from._internal_nombre());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_enlacefoto(from._internal_enlacefoto());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_reservado1(from._internal_reservado1());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_reservado2(from._internal_reservado2());
    }
  }
}

void RecepcionFichaSolicitud_DatosUsuario::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecepcionFichaSolicitud_DatosUsuario::CopyFrom(const RecepcionFichaSolicitud_DatosUsuario& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toDusPB.RecepcionFichaSolicitud.DatosUsuario)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecepcionFichaSolicitud_DatosUsuario::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void RecepcionFichaSolicitud_DatosUsuario::InternalSwap(RecepcionFichaSolicitud_DatosUsuario* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  telefono_.Swap(&other->telefono_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nombre_.Swap(&other->nombre_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  enlacefoto_.Swap(&other->enlacefoto_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reservado1_.Swap(&other->reservado1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reservado2_.Swap(&other->reservado2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RecepcionFichaSolicitud_DatosUsuario::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecepcionFichaSolicitud::InitAsDefaultInstance() {
  ::toDusPB::_RecepcionFichaSolicitud_default_instance_._instance.get_mutable()->usuario_ = const_cast< ::toDusPB::RecepcionFichaSolicitud_DatosUsuario*>(
      ::toDusPB::RecepcionFichaSolicitud_DatosUsuario::internal_default_instance());
}
class RecepcionFichaSolicitud::_Internal {
 public:
  using HasBits = decltype(std::declval<RecepcionFichaSolicitud>()._has_bits_);
  static void set_has_fichasolicitud(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::toDusPB::RecepcionFichaSolicitud_DatosUsuario& usuario(const RecepcionFichaSolicitud* msg);
  static void set_has_usuario(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::toDusPB::RecepcionFichaSolicitud_DatosUsuario&
RecepcionFichaSolicitud::_Internal::usuario(const RecepcionFichaSolicitud* msg) {
  return *msg->usuario_;
}
RecepcionFichaSolicitud::RecepcionFichaSolicitud(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:toDusPB.RecepcionFichaSolicitud)
}
RecepcionFichaSolicitud::RecepcionFichaSolicitud(const RecepcionFichaSolicitud& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fichasolicitud_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_fichasolicitud()) {
    fichasolicitud_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_fichasolicitud(),
      GetArena());
  }
  if (from._internal_has_usuario()) {
    usuario_ = new ::toDusPB::RecepcionFichaSolicitud_DatosUsuario(*from.usuario_);
  } else {
    usuario_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:toDusPB.RecepcionFichaSolicitud)
}

void RecepcionFichaSolicitud::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecepcionFichaSolicitud_todus_2eproto.base);
  fichasolicitud_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  usuario_ = nullptr;
}

RecepcionFichaSolicitud::~RecepcionFichaSolicitud() {
  // @@protoc_insertion_point(destructor:toDusPB.RecepcionFichaSolicitud)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecepcionFichaSolicitud::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  fichasolicitud_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete usuario_;
}

void RecepcionFichaSolicitud::ArenaDtor(void* object) {
  RecepcionFichaSolicitud* _this = reinterpret_cast< RecepcionFichaSolicitud* >(object);
  (void)_this;
}
void RecepcionFichaSolicitud::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecepcionFichaSolicitud::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecepcionFichaSolicitud& RecepcionFichaSolicitud::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecepcionFichaSolicitud_todus_2eproto.base);
  return *internal_default_instance();
}


void RecepcionFichaSolicitud::Clear() {
// @@protoc_insertion_point(message_clear_start:toDusPB.RecepcionFichaSolicitud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      fichasolicitud_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(usuario_ != nullptr);
      usuario_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecepcionFichaSolicitud::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string fichaSolicitud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_fichasolicitud();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.RecepcionFichaSolicitud.fichaSolicitud");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .toDusPB.RecepcionFichaSolicitud.DatosUsuario usuario = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_usuario(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecepcionFichaSolicitud::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:toDusPB.RecepcionFichaSolicitud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string fichaSolicitud = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_fichasolicitud().data(), static_cast<int>(this->_internal_fichasolicitud().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.RecepcionFichaSolicitud.fichaSolicitud");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_fichasolicitud(), target);
  }

  // required .toDusPB.RecepcionFichaSolicitud.DatosUsuario usuario = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::usuario(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toDusPB.RecepcionFichaSolicitud)
  return target;
}

size_t RecepcionFichaSolicitud::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:toDusPB.RecepcionFichaSolicitud)
  size_t total_size = 0;

  if (_internal_has_fichasolicitud()) {
    // required string fichaSolicitud = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fichasolicitud());
  }

  if (_internal_has_usuario()) {
    // required .toDusPB.RecepcionFichaSolicitud.DatosUsuario usuario = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *usuario_);
  }

  return total_size;
}
size_t RecepcionFichaSolicitud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toDusPB.RecepcionFichaSolicitud)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string fichaSolicitud = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fichasolicitud());

    // required .toDusPB.RecepcionFichaSolicitud.DatosUsuario usuario = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *usuario_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecepcionFichaSolicitud::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toDusPB.RecepcionFichaSolicitud)
  GOOGLE_DCHECK_NE(&from, this);
  const RecepcionFichaSolicitud* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecepcionFichaSolicitud>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toDusPB.RecepcionFichaSolicitud)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toDusPB.RecepcionFichaSolicitud)
    MergeFrom(*source);
  }
}

void RecepcionFichaSolicitud::MergeFrom(const RecepcionFichaSolicitud& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toDusPB.RecepcionFichaSolicitud)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_fichasolicitud(from._internal_fichasolicitud());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_usuario()->::toDusPB::RecepcionFichaSolicitud_DatosUsuario::MergeFrom(from._internal_usuario());
    }
  }
}

void RecepcionFichaSolicitud::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toDusPB.RecepcionFichaSolicitud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecepcionFichaSolicitud::CopyFrom(const RecepcionFichaSolicitud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toDusPB.RecepcionFichaSolicitud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecepcionFichaSolicitud::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_usuario()) {
    if (!usuario_->IsInitialized()) return false;
  }
  return true;
}

void RecepcionFichaSolicitud::InternalSwap(RecepcionFichaSolicitud* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  fichasolicitud_.Swap(&other->fichasolicitud_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(usuario_, other->usuario_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecepcionFichaSolicitud::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SolicitudFichaAcceso::InitAsDefaultInstance() {
}
class SolicitudFichaAcceso::_Internal {
 public:
  using HasBits = decltype(std::declval<SolicitudFichaAcceso>()._has_bits_);
  static void set_has_telefono(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fichasolicitud(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_numeroversion(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

SolicitudFichaAcceso::SolicitudFichaAcceso(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:toDusPB.SolicitudFichaAcceso)
}
SolicitudFichaAcceso::SolicitudFichaAcceso(const SolicitudFichaAcceso& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  telefono_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_telefono()) {
    telefono_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_telefono(),
      GetArena());
  }
  fichasolicitud_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_fichasolicitud()) {
    fichasolicitud_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_fichasolicitud(),
      GetArena());
  }
  numeroversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_numeroversion()) {
    numeroversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_numeroversion(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:toDusPB.SolicitudFichaAcceso)
}

void SolicitudFichaAcceso::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SolicitudFichaAcceso_todus_2eproto.base);
  telefono_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fichasolicitud_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  numeroversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SolicitudFichaAcceso::~SolicitudFichaAcceso() {
  // @@protoc_insertion_point(destructor:toDusPB.SolicitudFichaAcceso)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SolicitudFichaAcceso::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  telefono_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fichasolicitud_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  numeroversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SolicitudFichaAcceso::ArenaDtor(void* object) {
  SolicitudFichaAcceso* _this = reinterpret_cast< SolicitudFichaAcceso* >(object);
  (void)_this;
}
void SolicitudFichaAcceso::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SolicitudFichaAcceso::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SolicitudFichaAcceso& SolicitudFichaAcceso::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SolicitudFichaAcceso_todus_2eproto.base);
  return *internal_default_instance();
}


void SolicitudFichaAcceso::Clear() {
// @@protoc_insertion_point(message_clear_start:toDusPB.SolicitudFichaAcceso)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      telefono_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      fichasolicitud_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      numeroversion_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SolicitudFichaAcceso::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string telefono = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_telefono();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.SolicitudFichaAcceso.telefono");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string fichaSolicitud = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_fichasolicitud();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.SolicitudFichaAcceso.fichaSolicitud");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string numeroVersion = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_numeroversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.SolicitudFichaAcceso.numeroVersion");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SolicitudFichaAcceso::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:toDusPB.SolicitudFichaAcceso)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string telefono = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_telefono().data(), static_cast<int>(this->_internal_telefono().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.SolicitudFichaAcceso.telefono");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_telefono(), target);
  }

  // required string fichaSolicitud = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_fichasolicitud().data(), static_cast<int>(this->_internal_fichasolicitud().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.SolicitudFichaAcceso.fichaSolicitud");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_fichasolicitud(), target);
  }

  // required string numeroVersion = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_numeroversion().data(), static_cast<int>(this->_internal_numeroversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.SolicitudFichaAcceso.numeroVersion");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_numeroversion(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toDusPB.SolicitudFichaAcceso)
  return target;
}

size_t SolicitudFichaAcceso::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:toDusPB.SolicitudFichaAcceso)
  size_t total_size = 0;

  if (_internal_has_telefono()) {
    // required string telefono = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_telefono());
  }

  if (_internal_has_fichasolicitud()) {
    // required string fichaSolicitud = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fichasolicitud());
  }

  if (_internal_has_numeroversion()) {
    // required string numeroVersion = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_numeroversion());
  }

  return total_size;
}
size_t SolicitudFichaAcceso::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toDusPB.SolicitudFichaAcceso)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string telefono = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_telefono());

    // required string fichaSolicitud = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fichasolicitud());

    // required string numeroVersion = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_numeroversion());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolicitudFichaAcceso::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toDusPB.SolicitudFichaAcceso)
  GOOGLE_DCHECK_NE(&from, this);
  const SolicitudFichaAcceso* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SolicitudFichaAcceso>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toDusPB.SolicitudFichaAcceso)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toDusPB.SolicitudFichaAcceso)
    MergeFrom(*source);
  }
}

void SolicitudFichaAcceso::MergeFrom(const SolicitudFichaAcceso& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toDusPB.SolicitudFichaAcceso)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_telefono(from._internal_telefono());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_fichasolicitud(from._internal_fichasolicitud());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_numeroversion(from._internal_numeroversion());
    }
  }
}

void SolicitudFichaAcceso::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toDusPB.SolicitudFichaAcceso)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolicitudFichaAcceso::CopyFrom(const SolicitudFichaAcceso& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toDusPB.SolicitudFichaAcceso)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolicitudFichaAcceso::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SolicitudFichaAcceso::InternalSwap(SolicitudFichaAcceso* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  telefono_.Swap(&other->telefono_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  fichasolicitud_.Swap(&other->fichasolicitud_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  numeroversion_.Swap(&other->numeroversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SolicitudFichaAcceso::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecepcionFichaAcceso::InitAsDefaultInstance() {
}
class RecepcionFichaAcceso::_Internal {
 public:
  using HasBits = decltype(std::declval<RecepcionFichaAcceso>()._has_bits_);
  static void set_has_reservado1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fichaacceso(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_tiempoexpiracion(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

RecepcionFichaAcceso::RecepcionFichaAcceso(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:toDusPB.RecepcionFichaAcceso)
}
RecepcionFichaAcceso::RecepcionFichaAcceso(const RecepcionFichaAcceso& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fichaacceso_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_fichaacceso()) {
    fichaacceso_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_fichaacceso(),
      GetArena());
  }
  ::memcpy(&reservado1_, &from.reservado1_,
    static_cast<size_t>(reinterpret_cast<char*>(&tiempoexpiracion_) -
    reinterpret_cast<char*>(&reservado1_)) + sizeof(tiempoexpiracion_));
  // @@protoc_insertion_point(copy_constructor:toDusPB.RecepcionFichaAcceso)
}

void RecepcionFichaAcceso::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecepcionFichaAcceso_todus_2eproto.base);
  fichaacceso_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&reservado1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tiempoexpiracion_) -
      reinterpret_cast<char*>(&reservado1_)) + sizeof(tiempoexpiracion_));
}

RecepcionFichaAcceso::~RecepcionFichaAcceso() {
  // @@protoc_insertion_point(destructor:toDusPB.RecepcionFichaAcceso)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecepcionFichaAcceso::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  fichaacceso_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecepcionFichaAcceso::ArenaDtor(void* object) {
  RecepcionFichaAcceso* _this = reinterpret_cast< RecepcionFichaAcceso* >(object);
  (void)_this;
}
void RecepcionFichaAcceso::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecepcionFichaAcceso::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecepcionFichaAcceso& RecepcionFichaAcceso::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecepcionFichaAcceso_todus_2eproto.base);
  return *internal_default_instance();
}


void RecepcionFichaAcceso::Clear() {
// @@protoc_insertion_point(message_clear_start:toDusPB.RecepcionFichaAcceso)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    fichaacceso_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&reservado1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tiempoexpiracion_) -
        reinterpret_cast<char*>(&reservado1_)) + sizeof(tiempoexpiracion_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecepcionFichaAcceso::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int32 reservado1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_reservado1(&has_bits);
          reservado1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string fichaAcceso = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_fichaacceso();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "toDusPB.RecepcionFichaAcceso.fichaAcceso");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 tiempoExpiracion = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_tiempoexpiracion(&has_bits);
          tiempoexpiracion_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecepcionFichaAcceso::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:toDusPB.RecepcionFichaAcceso)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 reservado1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_reservado1(), target);
  }

  // required string fichaAcceso = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_fichaacceso().data(), static_cast<int>(this->_internal_fichaacceso().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "toDusPB.RecepcionFichaAcceso.fichaAcceso");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_fichaacceso(), target);
  }

  // required int32 tiempoExpiracion = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_tiempoexpiracion(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:toDusPB.RecepcionFichaAcceso)
  return target;
}

size_t RecepcionFichaAcceso::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:toDusPB.RecepcionFichaAcceso)
  size_t total_size = 0;

  if (_internal_has_fichaacceso()) {
    // required string fichaAcceso = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fichaacceso());
  }

  if (_internal_has_reservado1()) {
    // required int32 reservado1 = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_reservado1());
  }

  if (_internal_has_tiempoexpiracion()) {
    // required int32 tiempoExpiracion = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tiempoexpiracion());
  }

  return total_size;
}
size_t RecepcionFichaAcceso::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:toDusPB.RecepcionFichaAcceso)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string fichaAcceso = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fichaacceso());

    // required int32 reservado1 = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_reservado1());

    // required int32 tiempoExpiracion = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tiempoexpiracion());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecepcionFichaAcceso::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:toDusPB.RecepcionFichaAcceso)
  GOOGLE_DCHECK_NE(&from, this);
  const RecepcionFichaAcceso* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecepcionFichaAcceso>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:toDusPB.RecepcionFichaAcceso)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:toDusPB.RecepcionFichaAcceso)
    MergeFrom(*source);
  }
}

void RecepcionFichaAcceso::MergeFrom(const RecepcionFichaAcceso& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:toDusPB.RecepcionFichaAcceso)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_fichaacceso(from._internal_fichaacceso());
    }
    if (cached_has_bits & 0x00000002u) {
      reservado1_ = from.reservado1_;
    }
    if (cached_has_bits & 0x00000004u) {
      tiempoexpiracion_ = from.tiempoexpiracion_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RecepcionFichaAcceso::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:toDusPB.RecepcionFichaAcceso)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecepcionFichaAcceso::CopyFrom(const RecepcionFichaAcceso& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:toDusPB.RecepcionFichaAcceso)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecepcionFichaAcceso::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void RecepcionFichaAcceso::InternalSwap(RecepcionFichaAcceso* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  fichaacceso_.Swap(&other->fichaacceso_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecepcionFichaAcceso, tiempoexpiracion_)
      + sizeof(RecepcionFichaAcceso::tiempoexpiracion_)
      - PROTOBUF_FIELD_OFFSET(RecepcionFichaAcceso, reservado1_)>(
          reinterpret_cast<char*>(&reservado1_),
          reinterpret_cast<char*>(&other->reservado1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RecepcionFichaAcceso::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace toDusPB
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::toDusPB::SolicitudSMS* Arena::CreateMaybeMessage< ::toDusPB::SolicitudSMS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::toDusPB::SolicitudSMS >(arena);
}
template<> PROTOBUF_NOINLINE ::toDusPB::SolicitudFichaSolicitud* Arena::CreateMaybeMessage< ::toDusPB::SolicitudFichaSolicitud >(Arena* arena) {
  return Arena::CreateMessageInternal< ::toDusPB::SolicitudFichaSolicitud >(arena);
}
template<> PROTOBUF_NOINLINE ::toDusPB::RecepcionFichaSolicitud_DatosUsuario* Arena::CreateMaybeMessage< ::toDusPB::RecepcionFichaSolicitud_DatosUsuario >(Arena* arena) {
  return Arena::CreateMessageInternal< ::toDusPB::RecepcionFichaSolicitud_DatosUsuario >(arena);
}
template<> PROTOBUF_NOINLINE ::toDusPB::RecepcionFichaSolicitud* Arena::CreateMaybeMessage< ::toDusPB::RecepcionFichaSolicitud >(Arena* arena) {
  return Arena::CreateMessageInternal< ::toDusPB::RecepcionFichaSolicitud >(arena);
}
template<> PROTOBUF_NOINLINE ::toDusPB::SolicitudFichaAcceso* Arena::CreateMaybeMessage< ::toDusPB::SolicitudFichaAcceso >(Arena* arena) {
  return Arena::CreateMessageInternal< ::toDusPB::SolicitudFichaAcceso >(arena);
}
template<> PROTOBUF_NOINLINE ::toDusPB::RecepcionFichaAcceso* Arena::CreateMaybeMessage< ::toDusPB::RecepcionFichaAcceso >(Arena* arena) {
  return Arena::CreateMessageInternal< ::toDusPB::RecepcionFichaAcceso >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
